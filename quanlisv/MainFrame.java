package quanlisv;

//trong bai nay da dung them rs2x.jar de connect table
import com.sun.media.sound.JARSoundbankReader;
import java.awt.Color;
import java.awt.Desktop;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.nio.file.Files;
import javax.swing.JFrame;
import java.sql.*;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
//import net.proteanit.sql.DbUtils;
import static quanlisv.LoginFrame.idi;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author virus
 */
public class MainFrame extends javax.swing.JFrame {
   //LoginFrame lg=new LoginFrame();
    /**
     * Creates new form MainFrame
     */
    int page;
    String s;
    //private File file;
    public MainFrame() {
        initComponents();
        
        //System.out.println(idi);
        //this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        //this.setLocationByPlatform(true);
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuPanel = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        searchTextField = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jButton20 = new javax.swing.JButton();
        mainPanel = new javax.swing.JPanel();
        introPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        dssvPanel = new javax.swing.JPanel();
        d = new javax.swing.JScrollPane();
        dssvTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        idTextField = new javax.swing.JTextField();
        nameTextField = new javax.swing.JTextField();
        dateTextField = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        sexTextFiled = new javax.swing.JTextField();
        dkmhPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        dkmhTable = new javax.swing.JTable();
        mhComboBox = new javax.swing.JComboBox<>();
        lhComboBox = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        dksvTable = new javax.swing.JTable();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        ddPanel = new javax.swing.JPanel();
        ddmhComboBox = new javax.swing.JComboBox<>();
        ddlhComboBox = new javax.swing.JComboBox<>();
        ddtComboBox = new javax.swing.JComboBox<>();
        jButton14 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        ddTable = new javax.swing.JTable();
        jButton15 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        ddvmTable = new javax.swing.JTable();
        dPanel = new javax.swing.JPanel();
        dmhComboBox = new javax.swing.JComboBox<>();
        dlhComboBox = new javax.swing.JComboBox<>();
        jButton17 = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        dTable = new javax.swing.JTable();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        dgkTextField = new javax.swing.JTextField();
        dccTextField = new javax.swing.JTextField();
        jButton19 = new javax.swing.JButton();
        dsmhPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        dsmhTable = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        mamonTextField = new javax.swing.JTextField();
        monhocTextField = new javax.swing.JTextField();
        lophocTextFiled = new javax.swing.JTextField();
        diadiemTextField = new javax.swing.JTextField();
        batdauTextField = new javax.swing.JTextField();
        ketthucTextFiled = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        uploadPanel = new javax.swing.JPanel();
        jButton21 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        uploadTextfield = new javax.swing.JTextField();
        jButton22 = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        menuPanel.setBackground(new java.awt.Color(255, 255, 255));
        menuPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/1.PNG"))); // NOI18N
        jButton1.setText("Danh sách sinh viên");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/2.png"))); // NOI18N
        jButton3.setText("Danh sách môn học");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/3.PNG"))); // NOI18N
        jButton9.setText("Đăng kí môn học");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton13.setText("Điểm danh");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton16.setText("Nhập điểm");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        jButton18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/8.png"))); // NOI18N
        jButton18.setText("Upload tài liệu");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        searchTextField.setToolTipText("Searching here");
        searchTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchTextFieldKeyReleased(evt);
            }
        });

        jButton20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/9.png"))); // NOI18N
        jButton20.setToolTipText("Exit");
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout menuPanelLayout = new javax.swing.GroupLayout(menuPanel);
        menuPanel.setLayout(menuPanelLayout);
        menuPanelLayout.setHorizontalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(menuPanelLayout.createSequentialGroup()
                        .addComponent(jButton13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton16))
                    .addGroup(menuPanelLayout.createSequentialGroup()
                        .addComponent(searchTextField)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton20, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addComponent(jSeparator1)
        );
        menuPanelLayout.setVerticalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton20, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton13)
                    .addComponent(jButton16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton18, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        mainPanel.setLayout(new java.awt.CardLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Phầm mềm quản lí sinh viên");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 134, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 122, Short.MAX_VALUE)
        );

        jLabel17.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 0, 0));
        jLabel17.setText("Học sinh nghỉ quá 3 buổi bị trừ 1 điểm");

        jLabel18.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 0, 0));
        jLabel18.setText("Đọc kĩ hướng dẫn trước khi sử dụng");

        javax.swing.GroupLayout introPanelLayout = new javax.swing.GroupLayout(introPanel);
        introPanel.setLayout(introPanelLayout);
        introPanelLayout.setHorizontalGroup(
            introPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, introPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(introPanelLayout.createSequentialGroup()
                .addGroup(introPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(introPanelLayout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(introPanelLayout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addGroup(introPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(172, Short.MAX_VALUE))
        );
        introPanelLayout.setVerticalGroup(
            introPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(introPanelLayout.createSequentialGroup()
                .addGap(122, 122, 122)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 183, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        mainPanel.add(introPanel, "card2");

        dssvTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        dssvTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dssvTableMouseClicked(evt);
            }
        });
        d.setViewportView(dssvTable);

        jLabel2.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setText("Mã số sinh viên");

        jLabel3.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 0));
        jLabel3.setText("Họ và tên");

        jLabel4.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 0, 0));
        jLabel4.setText("Ngày sinh");

        idTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                idTextFieldKeyReleased(evt);
            }
        });

        nameTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nameTextFieldKeyReleased(evt);
            }
        });

        dateTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                dateTextFieldKeyReleased(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/4.png"))); // NOI18N
        jButton2.setText("ADD");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/5.png"))); // NOI18N
        jButton4.setText("UPDATE");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/6.png"))); // NOI18N
        jButton5.setText("DELETE");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 0, 0));
        jLabel5.setText("Giới tính");

        sexTextFiled.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                sexTextFiledKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout dssvPanelLayout = new javax.swing.GroupLayout(dssvPanel);
        dssvPanel.setLayout(dssvPanelLayout);
        dssvPanelLayout.setHorizontalGroup(
            dssvPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(d, javax.swing.GroupLayout.DEFAULT_SIZE, 502, Short.MAX_VALUE)
            .addGroup(dssvPanelLayout.createSequentialGroup()
                .addGroup(dssvPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dssvPanelLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(dssvPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)))
                    .addGroup(dssvPanelLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jButton2)))
                .addGroup(dssvPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dssvPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(dssvPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(dateTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 223, Short.MAX_VALUE)
                            .addComponent(nameTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(idTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sexTextFiled))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(dssvPanelLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jButton4)
                        .addGap(48, 48, 48)
                        .addComponent(jButton5)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        dssvPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton2, jButton4, jButton5});

        dssvPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel2, jLabel3, jLabel4});

        dssvPanelLayout.setVerticalGroup(
            dssvPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dssvPanelLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(d, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dssvPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(dssvPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(dssvPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(dateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(dssvPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(sexTextFiled, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(dssvPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32))
        );

        dssvPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButton2, jButton4, jButton5});

        dssvPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel2, jLabel3, jLabel4});

        dssvPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {dateTextField, idTextField, nameTextField, sexTextFiled});

        mainPanel.add(dssvPanel, "card3");

        dkmhTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(dkmhTable);

        mhComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mhComboBoxActionPerformed(evt);
            }
        });

        lhComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", " " }));

        dksvTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(dksvTable);

        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/4.png"))); // NOI18N
        jButton10.setText("ADD");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/7.png"))); // NOI18N
        jButton11.setText("Danh sách học sinh");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/6.png"))); // NOI18N
        jButton12.setText("DELETE");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(204, 0, 0));
        jLabel12.setText("Danh sách học sinh đã đăng kí");

        jLabel16.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 0, 0));
        jLabel16.setText("Chọn các học sinh dưới đây để đăng kí");

        javax.swing.GroupLayout dkmhPanelLayout = new javax.swing.GroupLayout(dkmhPanel);
        dkmhPanel.setLayout(dkmhPanelLayout);
        dkmhPanelLayout.setHorizontalGroup(
            dkmhPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 502, Short.MAX_VALUE)
            .addComponent(jScrollPane3)
            .addGroup(dkmhPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dkmhPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dkmhPanelLayout.createSequentialGroup()
                        .addComponent(mhComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(lhComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jButton11))
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(106, Short.MAX_VALUE))
            .addGroup(dkmhPanelLayout.createSequentialGroup()
                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        dkmhPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton10, jButton12});

        dkmhPanelLayout.setVerticalGroup(
            dkmhPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dkmhPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(dkmhPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mhComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lhComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton11))
                .addGap(18, 18, 18)
                .addComponent(jLabel16)
                .addGap(15, 15, 15)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dkmhPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton10)
                    .addComponent(jButton12))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        mainPanel.add(dkmhPanel, "card5");

        ddmhComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ddmhComboBoxActionPerformed(evt);
            }
        });

        ddlhComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ddlhComboBoxActionPerformed(evt);
            }
        });

        jButton14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/7.png"))); // NOI18N
        jButton14.setText("Danh sách học sinh");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        ddTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane4.setViewportView(ddTable);

        jButton15.setText("Điểm danh");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 0, 0));
        jLabel13.setText("Danh sách sinh viên vắng mặt");

        ddvmTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane5.setViewportView(ddvmTable);

        javax.swing.GroupLayout ddPanelLayout = new javax.swing.GroupLayout(ddPanel);
        ddPanel.setLayout(ddPanelLayout);
        ddPanelLayout.setHorizontalGroup(
            ddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ddPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(ddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ddPanelLayout.createSequentialGroup()
                        .addComponent(jButton15)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(ddPanelLayout.createSequentialGroup()
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ddPanelLayout.createSequentialGroup()
                        .addGroup(ddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4)
                            .addGroup(ddPanelLayout.createSequentialGroup()
                                .addComponent(ddmhComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(ddlhComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(ddtComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton14)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(15, 15, 15))))
        );

        ddPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {ddlhComboBox, ddmhComboBox, ddtComboBox});

        ddPanelLayout.setVerticalGroup(
            ddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ddPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ddmhComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ddlhComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ddtComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton14))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(79, Short.MAX_VALUE))
        );

        ddPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {ddlhComboBox, ddmhComboBox, ddtComboBox, jButton14});

        mainPanel.add(ddPanel, "card6");

        dmhComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dmhComboBoxActionPerformed(evt);
            }
        });

        jButton17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/7.png"))); // NOI18N
        jButton17.setText("Danh sách học sinh");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        dTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane6.setViewportView(dTable);

        jLabel14.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 0, 0));
        jLabel14.setText("Điểm giữa kì");

        jLabel15.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 0, 0));
        jLabel15.setText("Điểm cuối kì");

        dgkTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dgkTextFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                dgkTextFieldKeyReleased(evt);
            }
        });

        jButton19.setText("Cập nhật");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dPanelLayout = new javax.swing.GroupLayout(dPanel);
        dPanel.setLayout(dPanelLayout);
        dPanelLayout.setHorizontalGroup(
            dPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dPanelLayout.createSequentialGroup()
                .addGroup(dPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane6))
                    .addGroup(dPanelLayout.createSequentialGroup()
                        .addGroup(dPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(dPanelLayout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(dmhComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(dlhComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(71, 71, 71)
                                .addComponent(jButton17))
                            .addGroup(dPanelLayout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addGroup(dPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(50, 50, 50)
                                .addGroup(dPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(dgkTextField)
                                    .addComponent(dccTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)))
                            .addGroup(dPanelLayout.createSequentialGroup()
                                .addGap(197, 197, 197)
                                .addComponent(jButton19)))
                        .addGap(0, 8, Short.MAX_VALUE)))
                .addContainerGap())
        );
        dPanelLayout.setVerticalGroup(
            dPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dPanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(dPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dmhComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dlhComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(dPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(dgkTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(dPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(dccTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addComponent(jButton19)
                .addGap(82, 82, 82))
        );

        mainPanel.add(dPanel, "card7");

        dsmhPanel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                dsmhPanelKeyReleased(evt);
            }
        });

        dsmhTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        dsmhTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dsmhTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(dsmhTable);

        jLabel6.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 0, 0));
        jLabel6.setText("Mã môn học");

        jLabel7.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 0, 0));
        jLabel7.setText("Tên môn học");

        jLabel8.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 0, 0));
        jLabel8.setText("Mã lớp học");

        jLabel9.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 0, 0));
        jLabel9.setText("Địa điểm");

        jLabel10.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 0, 0));
        jLabel10.setText("Tuần bắt đầu");

        jLabel11.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 0, 0));
        jLabel11.setText("Tuần kết thúc");

        mamonTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                mamonTextFieldKeyReleased(evt);
            }
        });

        monhocTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                monhocTextFieldKeyReleased(evt);
            }
        });

        lophocTextFiled.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                lophocTextFiledKeyReleased(evt);
            }
        });

        batdauTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                batdauTextFieldKeyReleased(evt);
            }
        });

        ketthucTextFiled.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ketthucTextFiledKeyReleased(evt);
            }
        });

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/4.png"))); // NOI18N
        jButton6.setText("ADD");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/5.png"))); // NOI18N
        jButton7.setText("UPDATE");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/6.png"))); // NOI18N
        jButton8.setText("DELETE");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dsmhPanelLayout = new javax.swing.GroupLayout(dsmhPanel);
        dsmhPanel.setLayout(dsmhPanelLayout);
        dsmhPanelLayout.setHorizontalGroup(
            dsmhPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 502, Short.MAX_VALUE)
            .addGroup(dsmhPanelLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(dsmhPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(dsmhPanelLayout.createSequentialGroup()
                        .addGroup(dsmhPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(dsmhPanelLayout.createSequentialGroup()
                                .addGroup(dsmhPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(dsmhPanelLayout.createSequentialGroup()
                                .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                                .addGap(45, 45, 45)))
                        .addGroup(dsmhPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(dsmhPanelLayout.createSequentialGroup()
                                .addComponent(jButton7)
                                .addGap(49, 49, 49)
                                .addComponent(jButton8))
                            .addComponent(ketthucTextFiled, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(dsmhPanelLayout.createSequentialGroup()
                        .addGroup(dsmhPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(dsmhPanelLayout.createSequentialGroup()
                                .addGroup(dsmhPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(13, 13, 13)))
                        .addGap(45, 45, 45)
                        .addGroup(dsmhPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(dsmhPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(monhocTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)
                                .addComponent(mamonTextField)
                                .addComponent(lophocTextFiled)
                                .addComponent(diadiemTextField))
                            .addComponent(batdauTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        dsmhPanelLayout.setVerticalGroup(
            dsmhPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dsmhPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(dsmhPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mamonTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(dsmhPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(monhocTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(dsmhPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(lophocTextFiled, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(dsmhPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(diadiemTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(dsmhPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(batdauTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(dsmhPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(ketthucTextFiled, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(dsmhPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(jButton7)
                    .addComponent(jButton8))
                .addGap(0, 72, Short.MAX_VALUE))
        );

        mainPanel.add(dsmhPanel, "card4");

        jButton21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/16.png"))); // NOI18N
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jButton22.setText("Upload");
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(jTable1);

        javax.swing.GroupLayout uploadPanelLayout = new javax.swing.GroupLayout(uploadPanel);
        uploadPanel.setLayout(uploadPanelLayout);
        uploadPanelLayout.setHorizontalGroup(
            uploadPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(uploadPanelLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(uploadPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(uploadPanelLayout.createSequentialGroup()
                        .addComponent(uploadTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton21, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton22))
                    .addGroup(uploadPanelLayout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(135, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, uploadPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        uploadPanelLayout.setVerticalGroup(
            uploadPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(uploadPanelLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(uploadPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton22)
                    .addGroup(uploadPanelLayout.createSequentialGroup()
                        .addGroup(uploadPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(uploadPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(uploadTextfield))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(114, Short.MAX_VALUE))
        );

        mainPanel.add(uploadPanel, "card8");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(menuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 0, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(menuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(732, 536));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
//display dssv
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        mainPanel.removeAll();
        mainPanel.add(dssvPanel);
        mainPanel.repaint();
        mainPanel.revalidate();
        try {
            loadDssv();
            page=1;
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed
//add new hs
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        Date date=Date.valueOf(dateTextField.getText());
        if(new DssvUpdater().add(Integer.parseInt(idTextField.getText()),nameTextField.getText(),date,sexTextFiled.getText())){
            JOptionPane.showMessageDialog(null, "Successfully Inserted");
            
            //clear text
            idTextField.setText("");
            nameTextField.setText("");
            dateTextField.setText("");
            sexTextFiled.setText("");
            try {
                loadDssv();
            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Not Saved");
        }
    }//GEN-LAST:event_jButton2ActionPerformed
//display selected hs
    private void dssvTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dssvTableMouseClicked
        // TODO add your handling code here:
        String ids=dssvTable.getValueAt(dssvTable.getSelectedRow(),0).toString();
       // int id=Integer.parseInt(ids);
        String name=dssvTable.getValueAt(dssvTable.getSelectedRow(),1).toString();
        String date=dssvTable.getValueAt(dssvTable.getSelectedRow(),2).toString();
        String sex=dssvTable.getValueAt(dssvTable.getSelectedRow(),3).toString();
        //System.out.println(sex);
        idTextField.setText(ids);
        nameTextField.setText(name);
        dateTextField.setText(date);
        sexTextFiled.setText(sex);
    }//GEN-LAST:event_dssvTableMouseClicked
//delete hs
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        String options[]={"Yes","No"};
        int asw=JOptionPane.showOptionDialog(null, "Sure to delete ?", "Delete confirm",JOptionPane.YES_NO_CANCEL_OPTION,JOptionPane.QUESTION_MESSAGE,null,options,options[1] );
        if(asw==0){
            String ids=dssvTable.getValueAt(dssvTable.getSelectedRow(),0).toString();
            int id=Integer.parseInt(ids);
        
            if(new DssvUpdater().delete(id)){
                JOptionPane.showMessageDialog(null, " Successfully delete");
            //clear data
                idTextField.setText("");
                nameTextField.setText("");
                dateTextField.setText("");
                sexTextFiled.setText("");
                try {
                    loadDssv();
                } catch (ClassNotFoundException | SQLException ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        
            else{
                JOptionPane.showMessageDialog(null, "delete false");
                }   
        }
    }//GEN-LAST:event_jButton5ActionPerformed
//update hs
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        String ids=dssvTable.getValueAt(dssvTable.getSelectedRow(),0).toString();
        int id=Integer.parseInt(ids);
        //System.out.println(id);
        if(new DssvUpdater().update(id, nameTextField.getText(), dateTextField.getText(),sexTextFiled.getText())){
            JOptionPane.showMessageDialog(null, " Successfully Update");
            //clear data
            idTextField.setText("");
            nameTextField.setText("");
            dateTextField.setText("");
            sexTextFiled.setText("");
            try {
                loadDssv();
            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Update false");
        }
    }//GEN-LAST:event_jButton4ActionPerformed
//display danh sach mon hoc
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        mainPanel.removeAll();
        mainPanel.add(dsmhPanel);
        mainPanel.repaint();
        mainPanel.revalidate();
        try {
            loadDsmh();
            page=2;
        } catch (SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed
//add mon hoc moi
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
       
        if(new DsmhUpdater().add(Integer.parseInt(mamonTextField.getText()),monhocTextField.getText(), lophocTextFiled.getText(), diadiemTextField.getText(), Integer.parseInt(batdauTextField.getText()), Integer.parseInt(ketthucTextFiled.getText()))){
            JOptionPane.showMessageDialog(null, "successfully inserted");
            mamonTextField.setText("");
            monhocTextField.setText("");
            lophocTextFiled.setText("");
            diadiemTextField.setText("");
            batdauTextField.setText("");
            ketthucTextFiled.setText("");
            try {
                loadDsmh();
            } catch (SQLException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else {
            JOptionPane.showMessageDialog(null, "insert false");
        }
    }//GEN-LAST:event_jButton6ActionPerformed
//display selected mon hoc
    private void dsmhTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dsmhTableMouseClicked
        // TODO add your handling code here:
        String mamons=dsmhTable.getValueAt(dsmhTable.getSelectedRow(),0).toString();
        String monhoc=dsmhTable.getValueAt(dsmhTable.getSelectedRow(),1).toString();
        String lophoc=dsmhTable.getValueAt(dsmhTable.getSelectedRow(),2).toString();
        String diadiem=dsmhTable.getValueAt(dsmhTable.getSelectedRow(),3).toString();
        String batdaus=dsmhTable.getValueAt(dsmhTable.getSelectedRow(),4).toString();
        String ketthucs=dsmhTable.getValueAt(dsmhTable.getSelectedRow(),5).toString();
        
        mamonTextField.setText(mamons);
            monhocTextField.setText(monhoc);
            lophocTextFiled.setText(lophoc);
            diadiemTextField.setText(diadiem);
            batdauTextField.setText(batdaus);
            ketthucTextFiled.setText(ketthucs);
    }//GEN-LAST:event_dsmhTableMouseClicked
//update mon hoc
    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        if(new DsmhUpdater().update(Integer.parseInt(mamonTextField.getText()),monhocTextField.getText(), lophocTextFiled.getText(), diadiemTextField.getText(), Integer.parseInt(batdauTextField.getText()), Integer.parseInt(ketthucTextFiled.getText()))){
            JOptionPane.showMessageDialog(null, "successfully update");
            mamonTextField.setText("");
            monhocTextField.setText("");
            lophocTextFiled.setText("");
            diadiemTextField.setText("");
            batdauTextField.setText("");
            ketthucTextFiled.setText("");
            try {
                loadDsmh();
            } catch (SQLException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else {
            JOptionPane.showMessageDialog(null, "update false");
        }
    }//GEN-LAST:event_jButton7ActionPerformed
//delete mon hoc
    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        String options[]={"Yes","No"};
        int asw=JOptionPane.showOptionDialog(null, "Sure to delete ?", "Delete confirm",JOptionPane.YES_NO_CANCEL_OPTION,JOptionPane.QUESTION_MESSAGE,null,options,options[1] );
        String mamons=dsmhTable.getValueAt(dsmhTable.getSelectedRow(), 0).toString();
        int mamon=Integer.parseInt(mamons);
        if(new DsmhUpdater().delete(mamon)){
            JOptionPane.showMessageDialog(null, "Successfully delete");
            try {
                loadDsmh();
            } catch (SQLException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Delete false");
        }
    }//GEN-LAST:event_jButton8ActionPerformed
//díplay dang ki mon hoc
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        mainPanel.removeAll();
        mainPanel.add(dkmhPanel);
        mainPanel.repaint();
        mainPanel.revalidate();
        try {
            loadDkmh();
            String ten_mon_hoc=mhComboBox.getSelectedItem().toString();
            loadDkmh1(ten_mon_hoc);
        } catch (SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton9ActionPerformed
//display combobox
    private void mhComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mhComboBoxActionPerformed
        // TODO add your handling code here:
        String ten_mon_hoc=mhComboBox.getSelectedItem().toString();
        
        try {
            loadDkmh1(ten_mon_hoc);
        } catch (SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mhComboBoxActionPerformed
//display dssv chuan bi dang ki
    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        String ten_mon_hoc=mhComboBox.getSelectedItem().toString();
        String ma_lop_hoc=lhComboBox.getSelectedItem().toString(); 
        loadDkmh2(ma_lop_hoc);
        loadDkmh3(ten_mon_hoc, ma_lop_hoc);
    }//GEN-LAST:event_jButton11ActionPerformed
//dang ki sv cho mon hoc
    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        String ten_mon_hoc=mhComboBox.getSelectedItem().toString();
        String ma_lop_hoc=lhComboBox.getSelectedItem().toString();
        String ids=dksvTable.getValueAt(dksvTable.getSelectedRow(),0).toString();
        int id=Integer.parseInt(ids);
        String name=dksvTable.getValueAt(dksvTable.getSelectedRow(),1).toString();
        if(new DkmhUpdater().add(ten_mon_hoc, ma_lop_hoc, id, name)){
            JOptionPane.showMessageDialog(null, "Successfully Inserted");
            loadDkmh2(ma_lop_hoc);
            loadDkmh3(ten_mon_hoc, ma_lop_hoc);
        }
        else {
            JOptionPane.showMessageDialog(null, "Not Saved");
        }
    }//GEN-LAST:event_jButton10ActionPerformed
//xoa hoc sinh khoi dang ki mon hoc
    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        String ten_mon_hoc=mhComboBox.getSelectedItem().toString();
        String ma_lop_hoc=lhComboBox.getSelectedItem().toString();
        String options[]={"Yes","No"};
        int asw=JOptionPane.showOptionDialog(null, "Sure to delete ?", "Delete confirm",JOptionPane.YES_NO_CANCEL_OPTION,JOptionPane.QUESTION_MESSAGE,null,options,options[1] );
        String ids=dkmhTable.getValueAt(dkmhTable.getSelectedRow(),0).toString();
        //System.out.println(ids);    
        //System.out.println(ma_lop_hoc);
        int id=Integer.parseInt(ids);
        if(new DkmhUpdater().delete(id,ma_lop_hoc)){
            JOptionPane.showMessageDialog(null, "Delete successful");
            loadDkmh2(ma_lop_hoc);
            loadDkmh3(ten_mon_hoc, ma_lop_hoc);
        }
        else{
            JOptionPane.showMessageDialog(null, "delete false");
        }
    }//GEN-LAST:event_jButton12ActionPerformed
//display combobox mon hoc diem danh
    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        mainPanel.removeAll();
        mainPanel.add(ddPanel);
        mainPanel.repaint();
        mainPanel.revalidate();
        loadDd();
        String ten_mon_hoc=ddmhComboBox.getSelectedItem().toString();
        loadDd2(ten_mon_hoc);
        String ma_lop_hoc=ddlhComboBox.getSelectedItem().toString();  
        loadDd3(ma_lop_hoc);
    }//GEN-LAST:event_jButton13ActionPerformed
//display combobox lop hoc diem danh
    private void ddmhComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ddmhComboBoxActionPerformed
        // TODO add your handling code here:
        String ten_mon_hoc=ddmhComboBox.getSelectedItem().toString();
        loadDd2(ten_mon_hoc);
    }//GEN-LAST:event_ddmhComboBoxActionPerformed
//display combobox tuan diem danh
    private void ddlhComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ddlhComboBoxActionPerformed
        // TODO add your handling code here:
        String ma_lop_hoc=ddlhComboBox.getSelectedItem().toString();
        
        loadDd3(ma_lop_hoc);
    }//GEN-LAST:event_ddlhComboBoxActionPerformed
//display danh sach sinh vien diem danh
    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
        String ma_lop_hoc=ddlhComboBox.getSelectedItem().toString();
        String tuans=ddtComboBox.getSelectedItem().toString();
        int tuan=Integer.parseInt(tuans);
        loadDd4(ma_lop_hoc,tuan);
        loadDd5(ma_lop_hoc,tuan);
    }//GEN-LAST:event_jButton14ActionPerformed
//diem danh sinh vien
    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here:
        int i=0;
        String ten_mon_hoc=ddmhComboBox.getSelectedItem().toString();
        String ma_lop_hoc=ddlhComboBox.getSelectedItem().toString();
        String tuans=ddtComboBox.getSelectedItem().toString();
        int tuan=Integer.parseInt(tuans);
        String ids=ddTable.getValueAt(ddTable.getSelectedRow(),2).toString();
        int id=Integer.parseInt(ids);
        String name=ddTable.getValueAt(ddTable.getSelectedRow(),3).toString();

        try {
            Connection con=MySQLConnect.connectDB();
            Statement stm=con.createStatement();
            ResultSet rs=stm.executeQuery("SELECT tuan_nghi FROM dangki WHERE (ten_mh='"+ten_mon_hoc+"' AND ma_lop_hoc='"+ma_lop_hoc+"' AND maso_sv='"+id+"' AND ten_sv='"+name+"')");
            while(rs.next()){
                //System.out.println(rs.getString("tuan_nghi"));
            if(tuan==rs.getInt("tuan_nghi")){
                i=1;
            }
        }
        } catch (SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        //System.out.println(i);
        if(i==1){
            JOptionPane.showMessageDialog(null, "Học sinh này đã điểm danh");
        }
        else{
        if(new DdUpdater().add(ten_mon_hoc, ma_lop_hoc, id, name, tuan)){
                    JOptionPane.showMessageDialog(null, "Điểm danh thành công");
                    loadDd4(ma_lop_hoc,tuan); 
                    loadDd5(ma_lop_hoc,tuan);
                 }
                else{
                    JOptionPane.showMessageDialog(null, "Điểm danh thất bại");
                 }
        }
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        // TODO add your handling code here:
        mainPanel.removeAll();
        mainPanel.add(dPanel);
        mainPanel.repaint();
        mainPanel.revalidate();
        loadD();
        String ten_mon_hoc=dmhComboBox.getSelectedItem().toString();
        loadD2(ten_mon_hoc);
    }//GEN-LAST:event_jButton16ActionPerformed

    private void dmhComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dmhComboBoxActionPerformed
        // TODO add your handling code here:
        String ten_mon_hoc=dmhComboBox.getSelectedItem().toString();
        loadD2(ten_mon_hoc);
    }//GEN-LAST:event_dmhComboBoxActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        // TODO add your handling code here:
        String ma_lop_hoc=dlhComboBox.getSelectedItem().toString();
        loadD3(ma_lop_hoc);
        //System.out.println(sobuoinghi("111",4));
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        // TODO add your handling code here:
        float diem_trung_gian = 0;
        String ma_lop_hoc=dlhComboBox.getSelectedItem().toString();
        
        String ids=dTable.getValueAt(dTable.getSelectedRow(),0).toString();
        int id=Integer.parseInt(ids);
        String sobuoinghis=dTable.getValueAt(dTable.getSelectedRow(),2).toString();
        int sobuoinghi=Integer.parseInt(sobuoinghis);
        String diem_giua_kis=dgkTextField.getText();
        String diem_cuoi_kis=dccTextField.getText();
        float diem_giua_ki=Float.parseFloat(diem_giua_kis);
        float diem_cuoi_ki=Float.parseFloat(diem_cuoi_kis);
        
        
        if(sobuoinghi>3){
            diem_trung_gian=diem_giua_ki-1;
        }
        else
        {
            diem_trung_gian=diem_giua_ki;
        }
            //System.out.println(diem_trung_gian);
        float diem_tong_ket=(float) (0.3*diem_trung_gian+0.7*diem_cuoi_ki);
        
//        System.out.println(ma_lop_hoc);
//        System.out.println(id);
//        System.out.println(sobuoinghi);
//        System.out.println(diem_giua_ki);
//        System.out.println(diem_cuoi_ki);
//        System.out.println(diem_tong_ket);
        if(new DUpdater().update(ma_lop_hoc, id, sobuoinghi, diem_giua_ki, diem_cuoi_ki, diem_tong_ket)){
            JOptionPane.showMessageDialog(null, "UPDATE SUCCESS");
            loadD3(ma_lop_hoc);
        }
        else
        {
            JOptionPane.showMessageDialog(null, "UPDATE FALSE");
        }
        
    }//GEN-LAST:event_jButton19ActionPerformed

    private void dgkTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dgkTextFieldKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_dgkTextFieldKeyPressed

    private void dgkTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dgkTextFieldKeyReleased
        // TODO add your handling code here:
        String as=dgkTextField.getText();
        float a=Float.parseFloat(as);
        if(!new Validation().diem_validation(a)){
            dgkTextField.setBackground(Color.red);
            jButton19.setEnabled(false);
        }
        if(new Validation().diem_validation(a)){
            dgkTextField.setBackground(Color.white);
            jButton19.setEnabled(true);
        }
    }//GEN-LAST:event_dgkTextFieldKeyReleased

    private void nameTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameTextFieldKeyReleased
        // TODO add your handling code here:
        String a=nameTextField.getText();
        if(new Validation().tensv_validation(a)){
            nameTextField.setBackground(Color.white);
            jButton2.setEnabled(true);
            jButton4.setEnabled(true);
            jButton5.setEnabled(true);
        }
        else{
            nameTextField.setBackground(Color.red);
            jButton2.setEnabled(false);
            jButton4.setEnabled(false);
            jButton5.setEnabled(false);
        }
    }//GEN-LAST:event_nameTextFieldKeyReleased

    private void idTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idTextFieldKeyReleased
        // TODO add your handling code here:
        int a=Integer.parseInt(idTextField.getText());
        if(new Validation().mssv_validation(a)){
            idTextField.setBackground(Color.white);
            jButton2.setEnabled(true);
            jButton4.setEnabled(true);
            jButton5.setEnabled(true);
        }
        else{
            idTextField.setBackground(Color.red);
            jButton2.setEnabled(false);
            jButton4.setEnabled(false);
            jButton5.setEnabled(false);
        }
    }//GEN-LAST:event_idTextFieldKeyReleased

    private void sexTextFiledKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sexTextFiledKeyReleased
        // TODO add your handling code here:
        String a=sexTextFiled.getText();
        if(new Validation().sex_validation(a)){
            sexTextFiled.setBackground(Color.white);
            jButton2.setEnabled(true);
            jButton4.setEnabled(true);
            jButton5.setEnabled(true);
        }
        else{
            sexTextFiled.setBackground(Color.red);
            jButton2.setEnabled(false);
            jButton4.setEnabled(false);
            jButton5.setEnabled(false);
        }
    }//GEN-LAST:event_sexTextFiledKeyReleased

    private void dateTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dateTextFieldKeyReleased
        // TODO add your handling code here:
        String a=dateTextField.getText();
        if(new Validation().date_vvalidation(a)){
            dateTextField.setBackground(Color.white);
            jButton2.setEnabled(true);
            jButton4.setEnabled(true);
            jButton5.setEnabled(true);
        }
        else{
            dateTextField.setBackground(Color.red);
            jButton2.setEnabled(false);
            jButton4.setEnabled(false);
            jButton5.setEnabled(false);
        }
    }//GEN-LAST:event_dateTextFieldKeyReleased

    private void batdauTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_batdauTextFieldKeyReleased
        // TODO add your handling code here:
        int a=Integer.parseInt(batdauTextField.getText());
        if(new Validation().tuan_validation(a)){
            batdauTextField.setBackground(Color.white);
            jButton6.setEnabled(true);
            jButton7.setEnabled(true);
            jButton8.setEnabled(true);
        }else{
            batdauTextField.setBackground(Color.red);
            jButton6.setEnabled(false);
            jButton7.setEnabled(false);
            jButton8.setEnabled(false);
        }
    }//GEN-LAST:event_batdauTextFieldKeyReleased

    private void ketthucTextFiledKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ketthucTextFiledKeyReleased
        // TODO add your handling code here:
        int a=Integer.parseInt(batdauTextField.getText());
        int b=Integer.parseInt(ketthucTextFiled.getText());
        if(new Validation().tuanss_validation(a, b)){
            batdauTextField.setBackground(Color.white);
            ketthucTextFiled.setBackground(Color.white);
            jButton6.setEnabled(true);
            jButton7.setEnabled(true);
            jButton8.setEnabled(true);
        }
        else{
             ketthucTextFiled.setBackground(Color.red);
            jButton6.setEnabled(false);
            jButton7.setEnabled(false);
            jButton8.setEnabled(false);
        }
    }//GEN-LAST:event_ketthucTextFiledKeyReleased

    private void dsmhPanelKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dsmhPanelKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_dsmhPanelKeyReleased

    private void mamonTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mamonTextFieldKeyReleased
        // TODO add your handling code here:
        int a=Integer.parseInt(mamonTextField.getText());
        String b=mamonTextField.getText();
        if(new Validation().mssv_validation(a)){
            mamonTextField.setBackground(Color.white);
            jButton6.setEnabled(true);
            jButton7.setEnabled(true);
            jButton8.setEnabled(true);
        }else{
            mamonTextField.setBackground(Color.red);
            jButton6.setEnabled(false);
            jButton7.setEnabled(false);
            jButton8.setEnabled(false);
        }
         //checkMmh(Integer.parseInt(mamonTextField.getText()));
         if(checkMmh1(a)){
             checkMmh(a);
         }
         else
         {
             monhocTextField.setText("");
         }
         
    }//GEN-LAST:event_mamonTextFieldKeyReleased

    private void monhocTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_monhocTextFieldKeyReleased
        // TODO add your handling code here:
        String a=monhocTextField.getText();
        if(new Validation().tensv_validation(a)){
            monhocTextField.setBackground(Color.white);
            jButton6.setEnabled(true);
            jButton7.setEnabled(true);
            jButton8.setEnabled(true);
        }else{
            monhocTextField.setBackground(Color.red);
            jButton6.setEnabled(false);
            jButton7.setEnabled(false);
            jButton8.setEnabled(false);
        }
    }//GEN-LAST:event_monhocTextFieldKeyReleased

    private void lophocTextFiledKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lophocTextFiledKeyReleased
        // TODO add your handling code here:
        String a=lophocTextFiled.getText();
        if(new Validation().mlh_validation(a)){
            lophocTextFiled.setBackground(Color.white);
            jButton6.setEnabled(true);
            jButton7.setEnabled(true);
            jButton8.setEnabled(true);
        }
        else{
            lophocTextFiled.setBackground(Color.red);
            jButton6.setEnabled(false);
            jButton7.setEnabled(false);
            jButton8.setEnabled(false);
        }
    }//GEN-LAST:event_lophocTextFiledKeyReleased

    private void searchTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTextFieldKeyReleased
        // TODO add your handling code here:
        if(page==1){
            String key=searchTextField.getText();
            //System.out.println(key);
            
            searchMssv(key);
        }
        if(page==2){
            String key=searchTextField.getText();
            searchMh(key);
        }
    }//GEN-LAST:event_searchTextFieldKeyReleased

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
        //lg.setVisible(true);
        LoginFrame lg=new LoginFrame();
        lg.setVisible(true);
    }//GEN-LAST:event_jButton20ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        // TODO add your handling code here:
        mainPanel.removeAll();
        mainPanel.add(uploadPanel);
        mainPanel.repaint();
        mainPanel.revalidate();
        try {
            loadTl();
            String ten_mon_hoc=jComboBox1.getSelectedItem().toString();
            
            loadTl1(ten_mon_hoc);
            String ma_lop_hoc=jComboBox2.getSelectedItem().toString();
            loadTl2(ten_mon_hoc, ma_lop_hoc);
        } catch (SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton18ActionPerformed
    

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
        // TODO add your handling code here:
        int choose;
        String path;
        JFileChooser chooser=new JFileChooser();
        chooser.setDialogTitle("Choose file");
        choose=chooser.showOpenDialog(null);
        if(choose==JFileChooser.APPROVE_OPTION){
            File file=chooser.getSelectedFile();
            //System.out.println("Opening"+file.getName());
            //System.out.println(file.getPath());
            uploadTextfield.setText(file.getPath());
            s=file.getName();
            uploadTextfield.setEditable(false);
            path=System.getProperty("user.dir");
            File f = new File(path + "/" + s);
            if(f.exists()) f.delete();
            try {
                copyFile(file, f);
            } catch (IOException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);}
        }
        
    }//GEN-LAST:event_jButton21ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        String ten_mon_hoc=jComboBox1.getSelectedItem().toString();
        try {
            loadTl1(ten_mon_hoc);
        } catch (SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed
   
    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed
        // TODO add your handling code here:
        String ten_mon_hoc=jComboBox1.getSelectedItem().toString();
        String ma_lop_hoc=jComboBox2.getSelectedItem().toString();
        //String filePath=uploadTextfield.getText();
        String filePath=s;
        //System.out.println(filPath);
        String sql="INSERT INTO tailieu(ten_tai_lieu,ten_mon_hoc,ma_lop_hoc) VALUES('"+filePath+"','"+ten_mon_hoc+"','"+ma_lop_hoc+"')";
        
        try {
            Connection con=MySQLConnect.connectDB();
            Statement stm=con.prepareStatement(sql);
            stm.execute(sql);
            loadTl2(ten_mon_hoc, ma_lop_hoc);
        } catch (SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_jButton22ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
        String ten_mon_hoc=jComboBox1.getSelectedItem().toString();
        String ma_lop_hoc=jComboBox2.getSelectedItem().toString();
        try {
            loadTl2(ten_mon_hoc, ma_lop_hoc);
        } catch (SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        String name=jTable1.getValueAt(jTable1.getSelectedRow(),0).toString();
        try {
            //System.out.println(sex);
            openFile(name);
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTable1MouseClicked
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        //System.out.println(idi);
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField batdauTextField;
    private javax.swing.JScrollPane d;
    private javax.swing.JPanel dPanel;
    private javax.swing.JTable dTable;
    private javax.swing.JTextField dateTextField;
    private javax.swing.JTextField dccTextField;
    private javax.swing.JPanel ddPanel;
    private javax.swing.JTable ddTable;
    private javax.swing.JComboBox<String> ddlhComboBox;
    private javax.swing.JComboBox<String> ddmhComboBox;
    private javax.swing.JComboBox<String> ddtComboBox;
    private javax.swing.JTable ddvmTable;
    private javax.swing.JTextField dgkTextField;
    private javax.swing.JTextField diadiemTextField;
    private javax.swing.JPanel dkmhPanel;
    private javax.swing.JTable dkmhTable;
    private javax.swing.JTable dksvTable;
    private javax.swing.JComboBox<String> dlhComboBox;
    private javax.swing.JComboBox<String> dmhComboBox;
    private javax.swing.JPanel dsmhPanel;
    private javax.swing.JTable dsmhTable;
    private javax.swing.JPanel dssvPanel;
    private javax.swing.JTable dssvTable;
    private javax.swing.JTextField idTextField;
    private javax.swing.JPanel introPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField ketthucTextFiled;
    private javax.swing.JComboBox<String> lhComboBox;
    private javax.swing.JTextField lophocTextFiled;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JTextField mamonTextField;
    private javax.swing.JPanel menuPanel;
    private javax.swing.JComboBox<String> mhComboBox;
    private javax.swing.JTextField monhocTextField;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JTextField searchTextField;
    private javax.swing.JTextField sexTextFiled;
    private javax.swing.JPanel uploadPanel;
    private javax.swing.JTextField uploadTextfield;
    // End of variables declaration//GEN-END:variables

    private void loadDssv() throws ClassNotFoundException, SQLException {
        //cach 1:
//        Connection con=MySQLConnect.connectDB();
//        PreparedStatement pst=con.prepareStatement("SELECT * FROM sinhvien");
//        ResultSet rs=pst.executeQuery();
//        dssvTable.setModel(DbUtils.resultSetToTableModel(rs));
        //cach 2:
        DefaultTableModel tableModel =new DefaultTableModel();
        Connection con=MySQLConnect.connectDB();
        Statement stm=con.createStatement();
        ResultSet rs=stm.executeQuery("SELECT maso_sv,ten_sv,ngay_sinh,gioi_tinh FROM sinhvien");
        ResultSetMetaData rsmt=rs.getMetaData();
        int numberColumns=rsmt.getColumnCount();
        
        tableModel.addColumn("Mã số sinh viên");
        tableModel.addColumn("Họ và tên");
        tableModel.addColumn("Ngày sinh");
        tableModel.addColumn("Giới tính");
        
        ArrayList<String> arrayRows=new ArrayList<String>();
        while(rs.next()){
            for(int i=1;i<=numberColumns;i++){
                arrayRows.add(rs.getString(i));
            }            
            tableModel.addRow(arrayRows.toArray());
            arrayRows.clear();
        }
        dssvTable.setModel(tableModel);
    }

    private void loadDsmh() throws SQLException {
         DefaultTableModel tableModel =new DefaultTableModel();
        Connection con=MySQLConnect.connectDB();
        Statement stm=con.createStatement();
        ResultSet rs=stm.executeQuery("SELECT * FROM monhoc");
        ResultSetMetaData rsmt=rs.getMetaData();
        int numberColumns=rsmt.getColumnCount();
        
        tableModel.addColumn("Mã môn học");
        tableModel.addColumn("Tên môn học");
        tableModel.addColumn("Mã lớp học");
        tableModel.addColumn("Địa điểm");
        tableModel.addColumn("Thời gian bắt đầu");
        tableModel.addColumn("Thời gian kết thúc");
        
        ArrayList<String> arrayRows=new ArrayList<String>();
        while(rs.next()){
            for(int i=1;i<=numberColumns;i++){
                arrayRows.add(rs.getString(i));
            }            
            tableModel.addRow(arrayRows.toArray());
            arrayRows.clear();
        }
        dsmhTable.setModel(tableModel);
    }
    private void loadDkmh() throws SQLException{
        DefaultComboBoxModel model=new DefaultComboBoxModel();
        Connection con=MySQLConnect.connectDB();
        Statement stm=con.createStatement();
        ResultSet rs=stm.executeQuery("SELECT DISTINCT ten_mh FROM monhoc");
        while(rs.next()){
            model.addElement(rs.getString("ten_mh"));
        }
        mhComboBox.setModel(model);
        
        //String ten_mon_hoc=mhComboBox.getSelectedItem().toString();
        
        
//        DefaultComboBoxModel model1=new DefaultComboBoxModel();
//        rs=stm.executeQuery("SELECT ma_lop_hoc FROM monhoc WHERE ten_mh= '"+ten_mon_hoc+"'");
//        while(rs.next()){            
//            model1.addElement(rs.getString("ma_lop_hoc"));
//        }
//        lhComboBox.setModel(model1);
    }
    private void loadDkmh1(String ten_mon_hoc) throws SQLException{
        DefaultComboBoxModel model=new DefaultComboBoxModel();
        Connection con=MySQLConnect.connectDB();
        Statement stm=con.createStatement();
        ResultSet rs=stm.executeQuery("SELECT ma_lop_hoc FROM monhoc WHERE ten_mh= '"+ten_mon_hoc+"'");
        while(rs.next()){
            model.addElement(rs.getString("ma_lop_hoc"));
        }
        lhComboBox.setModel(model);
    }
//hien thi sv da dang ki mon hoc len bang
    private void loadDkmh2(String ma_lop_hoc)
    {
        DefaultTableModel tableModel =new DefaultTableModel();
        Connection con;
        try {
            con = MySQLConnect.connectDB();
            Statement stm=con.createStatement();
            ResultSet rs=stm.executeQuery("SELECT DISTINCT maso_sv,ten_sv,ten_mh,ma_lop_hoc FROM dangki WHERE ma_lop_hoc='"+ma_lop_hoc+"'");
            ResultSetMetaData rsmt=rs.getMetaData();
            int numberColumns=rsmt.getColumnCount();
            
            
            tableModel.addColumn("Mã số sinh viên");
            tableModel.addColumn("Tên sinh viên");
            tableModel.addColumn("Tên môn học");
            tableModel.addColumn("Mã lớp học");
            
             ArrayList<String> arrayRows=new ArrayList<String>();
            while(rs.next()){
                for(int i=1;i<=numberColumns;i++){
                    arrayRows.add(rs.getString(i));
            }            
            tableModel.addRow(arrayRows.toArray());
            arrayRows.clear();
            }
        dkmhTable.setModel(tableModel);
        } catch (SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
       
    }
//hien thi sv chuan bi dang ki- kho' vc
    private void loadDkmh3(String ten_mon_hoc, String ma_lop_hoc){
        int n = 0,i=1;
        DefaultTableModel tableModel =new DefaultTableModel();
        tableModel.addColumn("Mã số sinh viên");
        tableModel.addColumn("Họ và tên");
        try {
            Connection con=MySQLConnect.connectDB();
            Statement stm=con.createStatement();
            ResultSet rs=stm.executeQuery("SELECT DISTINCT ma_lop_hoc FROM dangki");
            while(rs.next()){
                String mlh=rs.getString("ma_lop_hoc");
                //System.out.println(mlh);
                n++;
                 if(ma_lop_hoc.equals(mlh)){
                    String sql1="SELECT * FROM sinhvien WHERE maso_sv NOT IN (SELECT maso_sv FROM dangki WHERE ma_lop_hoc='"+ma_lop_hoc+"')";
                    Statement stm1=con.createStatement();
                    ResultSet rs1=stm1.executeQuery(sql1);
                    while(rs1.next()){
                        String id1=rs1.getString(1);
                        String name1=rs1.getString(2);
                       
                        
                        tableModel.addRow(new String[]{id1,name1});
                    }
                  
                    break;
                }
                 else{
                     i++;
                 }
            }
//            System.out.println(n);
//            System.out.println(i); 
            if(n!=i)
            {
                String sql2="SELECT maso_sv, ten_sv FROM sinhvien";
                Statement stm2=con.createStatement();
                ResultSet rs2=stm2.executeQuery(sql2);
                while(rs2.next()){
                        String id2=rs2.getString(1);
                        String name2=rs2.getString(2);
                        
                        tableModel.addRow(new String[]{id2,name2});
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        dksvTable.setModel(tableModel);
    }
    private void loadDd(){
        try {
            DefaultComboBoxModel model=new DefaultComboBoxModel();
            Connection con=MySQLConnect.connectDB();
            Statement stm=con.createStatement();
            ResultSet rs=stm.executeQuery("SELECT DISTINCT ten_mh FROM monhoc");
            while(rs.next()){
                model.addElement(rs.getString("ten_mh"));
            }
            ddmhComboBox.setModel(model);
        } catch (SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void loadDd2(String ten_mon_hoc){
        try {
            DefaultComboBoxModel model=new DefaultComboBoxModel();
            Connection con=MySQLConnect.connectDB();
            Statement stm=con.createStatement();
            ResultSet rs=stm.executeQuery("SELECT ma_lop_hoc FROM monhoc WHERE ten_mh= '"+ten_mon_hoc+"'");
            while(rs.next()){
                model.addElement(rs.getString("ma_lop_hoc"));
            }
            ddlhComboBox.setModel(model);
        } catch (SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void loadDd3(String ma_lop_hoc){
        DefaultComboBoxModel model=new DefaultComboBoxModel();
        try {
            Connection con=MySQLConnect.connectDB();
            Statement stm=con.createStatement();
            ResultSet rs=stm.executeQuery("SELECT tuan_bat_dau, tuan_ket_thuc FROM monhoc WHERE ma_lop_hoc='"+ma_lop_hoc+"'");
            while(rs.next()){
                int m=rs.getInt("tuan_bat_dau");
                int n=rs.getInt("tuan_ket_thuc");
                for(int i=m;i<=n;i++){
                    model.addElement(i);
                }
            }
            ddtComboBox.setModel(model);
        } catch (SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    //Hien thi danh sach hoc sinh dang ki
    private void loadDd4(String ma_lop_hoc, int tuan){
        
        DefaultTableModel tableModel =new DefaultTableModel();
        Connection con;
        try {
            con = MySQLConnect.connectDB();
            Statement stm=con.createStatement();
            String sql="SELECT * FROM dangki WHERE ma_lop_hoc='"+ma_lop_hoc+"' AND tuan_nghi IS NULL";
            ResultSet rs=stm.executeQuery(sql);
            //ResultSetMetaData rsmt=rs.getMetaData();
            //int numberColumns=rsmt.getColumnCount();
            
            tableModel.addColumn("Tên môn học");
            tableModel.addColumn("Mã lớp học");
            tableModel.addColumn("Mã số sinh viên");
            tableModel.addColumn("Tên sinh viên");
            //tableModel.addColumn("Trang thai");
            
            
            // ArrayList<String> arrayRows=new ArrayList<String>();
             while(rs.next()){
                // int i=0;
                String ten_mon_hoc=rs.getString("ten_mh");
                //String ma_lh=rs.getString("ma_lop_hoc");
                int id=rs.getInt("maso_sv");
                String ids=Integer.toString(id);
                String name=rs.getString("ten_sv");
                
                
                tableModel.addRow(new String[]{ten_mon_hoc, ma_lop_hoc,ids, name});
                }
                
           
        ddTable.setModel(tableModel);
        } catch (SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void loadDd5(String ma_lop_hoc, int tuan){
        
        DefaultTableModel tableModel =new DefaultTableModel();
        Connection con;
        try {
            con = MySQLConnect.connectDB();
            Statement stm=con.createStatement();
            String sql="SELECT * FROM dangki WHERE ma_lop_hoc='"+ma_lop_hoc+"' AND tuan_nghi='"+tuan+"'";
            ResultSet rs=stm.executeQuery(sql);
            //ResultSetMetaData rsmt=rs.getMetaData();
            //int numberColumns=rsmt.getColumnCount();
            
            tableModel.addColumn("Tên môn học");
            tableModel.addColumn("Mã lớp học");
            tableModel.addColumn("Mã số sinh viên");
            tableModel.addColumn("Tên sinh viên");
            //tableModel.addColumn("Trang thai");
            
            
            // ArrayList<String> arrayRows=new ArrayList<String>();
             while(rs.next()){
                // int i=0;
                String ten_mon_hoc=rs.getString("ten_mh");
                //String ma_lh=rs.getString("ma_lop_hoc");
                int id=rs.getInt("maso_sv");
                String ids=Integer.toString(id);
                String name=rs.getString("ten_sv");
                
                
                tableModel.addRow(new String[]{ten_mon_hoc, ma_lop_hoc,ids, name});
                }
                
           
        ddvmTable.setModel(tableModel);
        } catch (SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void loadD(){
        try {
            DefaultComboBoxModel model=new DefaultComboBoxModel();
            Connection con=MySQLConnect.connectDB();
            Statement stm=con.createStatement();
            ResultSet rs=stm.executeQuery("SELECT DISTINCT ten_mh FROM monhoc");
            while(rs.next()){
                model.addElement(rs.getString("ten_mh"));
                
            }
            dmhComboBox.setModel(model);
        } catch (SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void loadD2(String ten_mon_hoc){
        try {
            DefaultComboBoxModel model=new DefaultComboBoxModel();
            Connection con=MySQLConnect.connectDB();
            Statement stm=con.createStatement();
            ResultSet rs=stm.executeQuery("SELECT ma_lop_hoc FROM monhoc WHERE ten_mh= '"+ten_mon_hoc+"'");
            while(rs.next()){
                model.addElement(rs.getString("ma_lop_hoc"));
            }
            dlhComboBox.setModel(model);
        } catch (SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void loadD3(String ma_lop_hoc){
         DefaultTableModel tableModel =new DefaultTableModel();
        Connection con;
        try {
            con = MySQLConnect.connectDB();
            Statement stm=con.createStatement();
            String sql="SELECT maso_sv,ten_sv,COUNT(tuan_nghi) AS total,diem_giua_ki,diem_cuoi_ki,diem_tong_ket FROM dangki WHERE ma_lop_hoc='"+ma_lop_hoc+"' AND tuan_nghi IS NULL GROUP BY maso_sv";
            ResultSet rs=stm.executeQuery(sql);
            //ResultSetMetaData rsmt=rs.getMetaData();
            //int numberColumns=rsmt.getColumnCount();
            
            //tableModel.addColumn("Ten mon hoc");
            //tableModel.addColumn("Ma lop hoc");
            tableModel.addColumn("Mã số sinh viên");
            tableModel.addColumn("Tên sinh viên");
            tableModel.addColumn("Số buổi nghỉ");
            tableModel.addColumn("Điểm giữa kì");
            tableModel.addColumn("Điểm cuối kì");
            tableModel.addColumn("Điểm tổng kết");
            //tableModel.addColumn("Trang thai");
            
            
            // ArrayList<String> arrayRows=new ArrayList<String>();
             while(rs.next()){
                //String ten_mon_hoc=rs.getString("ten_mh");
                //String ma_lh=rs.getString("ma_lop_hoc");
                int id=rs.getInt("maso_sv");
                String ids=Integer.toString(id);
                String name=rs.getString("ten_sv");
                int sobuoinghi=sobuoinghi(ma_lop_hoc,id);
                String sobuoinghis=Integer.toString(sobuoinghi);
                float diem_giua_ki=rs.getFloat("diem_giua_ki");
                float diem_cuoi_ki=rs.getFloat("diem_cuoi_ki");
                float diem_tong_ket=rs.getFloat("diem_tong_ket");
                String diem_giua_kis=Float.toString(diem_giua_ki);
                String diem_cuoi_kis=Float.toString(diem_cuoi_ki);
                String diem_tong_kets=Float.toString(diem_tong_ket);
                
                tableModel.addRow(new String[]{ids, name,sobuoinghis,diem_giua_kis, diem_cuoi_kis, diem_tong_kets});
                }
                
           
        dTable.setModel(tableModel);
        } catch (SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private int sobuoinghi(String ma_lop_hoc, int maso_sv){
        try {
            
            String sql="SELECT COUNT(tuan_nghi) AS total FROM dangki WHERE ma_lop_hoc='"+ma_lop_hoc+"' AND maso_sv='"+maso_sv+"' GROUP BY maso_sv";
            
            Connection con=MySQLConnect.connectDB();
            Statement stm=con.createStatement();
            ResultSet rs=stm.executeQuery(sql);
            while(rs.next()){
                //System.out.println(rs.getString("maso_sv"));
                //System.out.println(rs.getInt("total"));
                return rs.getInt("total");
               
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        return 0;
    } 
   
    public void searchMssv(String id){
        String sql="SELECT * FROM sinhvien WHERE (maso_sv='"+id+"' OR ten_sv LIKE '%"+id+"%')";
        DefaultTableModel tableModel =new DefaultTableModel();
        tableModel.addColumn("Mã số sinh viên");
        tableModel.addColumn("Họ và tên");
        tableModel.addColumn("Ngày sinh");
        tableModel.addColumn("Giới tính");
        try {
            Connection con = MySQLConnect.connectDB();
            Statement stm=con.createStatement();
            ResultSet rs=stm.executeQuery(sql);
            while(rs.next()){
                String ids=rs.getString("maso_sv");
                String ten=rs.getString("ten_sv");
                String date=rs.getString("ngay_sinh");
                String gioi_tinh=rs.getString("gioi_tinh");
                
                tableModel.addRow(new String[]{ids,ten,date,gioi_tinh});
            }
        } catch (SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
         dssvTable.setModel(tableModel);
    }
    
    public void searchMh(String key){
        String sql="SELECT * FROM monhoc WHERE (ma_mh='"+key+"'  OR ma_lop_hoc='"+key+"' OR ten_mh LIKE '%"+key+"%')";
        //System.out.println(sql);
        DefaultTableModel tableModel=new DefaultTableModel();
        tableModel.addColumn("Mã môn học");
        tableModel.addColumn("Tên môn học");
        tableModel.addColumn("Mã lớp học");
        tableModel.addColumn("Địa điểm");
        tableModel.addColumn("Thời gian bắt đầu");
        tableModel.addColumn("Thời gian kết thúc");
        try {
            Connection con=MySQLConnect.connectDB();
            Statement stm=con.createStatement();
            ResultSet rs=stm.executeQuery(sql);
            while(rs.next()){
                String ma_mh=rs.getString("ma_mh");
                String ten_mh=rs.getString("ten_mh");
                String ma_lop_hoc=rs.getString("ma_lop_hoc");
                String dia_diem=rs.getString("dia_diem");
                String tuan_bat_dau=rs.getString("tuan_bat_dau");
                String tuan_ket_thuc=rs.getString("tuan_ket_thuc");
                tableModel.addRow(new String[]{ma_mh,ten_mh,ma_lop_hoc,dia_diem,tuan_bat_dau,tuan_ket_thuc});
            }
        } catch (SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        dsmhTable.setModel(tableModel);
    }
    
    public void checkMmh(int ma_mh){
        
       
                    String sql="SELECT * FROM monhoc WHERE ma_mh='"+ma_mh+"'";
        try {
            Connection con=MySQLConnect.connectDB();
            Statement stm=con.createStatement();
            ResultSet rs=stm.executeQuery(sql);
            while(rs.next()){
                String ten_mh=rs.getString("ten_mh");
                
                monhocTextField.setText(ten_mh);
                monhocTextField.setEditable(false);
            }
        } catch (SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            
        }


  
    }
    public boolean checkMmh1(int ma_mh){
        
        String sql="SELECT * FROM monhoc";
        try {
            Connection con=MySQLConnect.connectDB();
            Statement stm=con.createStatement();
            ResultSet rs=stm.executeQuery(sql);
            while(rs.next()){
                int mmh=Integer.parseInt(rs.getString("ma_mh"));
                if(ma_mh==mmh){
                    return true;
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        return false;
    }
    
    private void loadTl() throws SQLException{
        DefaultComboBoxModel model=new DefaultComboBoxModel();
        Connection con=MySQLConnect.connectDB();
        Statement stm=con.createStatement();
        ResultSet rs=stm.executeQuery("SELECT DISTINCT ten_mh FROM monhoc");
        while(rs.next()){
            model.addElement(rs.getString("ten_mh"));
        }
        jComboBox1.setModel(model);
    }
    
    private void loadTl1(String ten_mon_hoc) throws SQLException{
        DefaultComboBoxModel model=new DefaultComboBoxModel();
        Connection con=MySQLConnect.connectDB();
        Statement stm=con.createStatement();
        ResultSet rs=stm.executeQuery("SELECT ma_lop_hoc FROM monhoc WHERE ten_mh= '"+ten_mon_hoc+"'");
        while(rs.next()){
            model.addElement(rs.getString("ma_lop_hoc"));
        }
        jComboBox2.setModel(model);
    }
    
    private void loadTl2(String ten_mon_hoc, String ma_lop_hoc) throws SQLException{
        DefaultTableModel tableModel=new DefaultTableModel();
        tableModel.addColumn("Danh sách tài liệu");
        String sql="SELECT ten_tai_lieu FROM tailieu WHERE ma_lop_hoc='"+ma_lop_hoc+"' AND ten_mon_hoc='"+ten_mon_hoc+"'";
        Connection con=MySQLConnect.connectDB();
        Statement stm=con.createStatement();
        ResultSet rs=stm.executeQuery(sql);
        while(rs.next()){
            String ttl=rs.getString("ten_tai_lieu");
            //System.out.println(ttl);
            tableModel.addRow(new String[]{ttl});
        }
        jTable1.setModel(tableModel);
        
    }
    
    //if (isChangedAvatar) {
      //      File f = new File("F://hachi/src/hachi/library/image/user_avatar/" + txtUserId.getText() + ".jpg");
        //    copyFile(this.file, f);
        //}
    public static void copyFile( File from, File to ) throws IOException {
        Files.copy( from.toPath(), to.toPath() );
    }
   
    public static void openFile(String args) throws IOException {
        //text file, should be opening in default text editor
        File file = new File(System.getProperty("user.dir")+"/" + args);
         
        //first check if Desktop is supported by Platform or not
        if(!Desktop.isDesktopSupported()){
            //JOptionPane.showMessageDialog(null, "Desktop is not supported");
            System.out.println("Desktop is not supported");
            return;
        }
         
        Desktop desktop = Desktop.getDesktop();
        if(file.exists()) desktop.open(file);
         
        //let's try to open PDF file
        //file = new File("D://" + args);
        //if(file.exists()) desktop.open(file);
    }
 
//public static void main (String args[]) {

	   //String workingDir = System.getProperty("user.dir");
	   //System.out.println("Current working directory : " + workingDir);
	   
   //}
}

